<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Employe__CLASSMETADATA__' => 0,
'App__Entity__Permis__CLASSMETADATA__' => 1,
'App__Entity__Equipement__CLASSMETADATA__' => 2,
'App__Entity__Vehicule__CLASSMETADATA__' => 3,
'App__Entity__CarteGrise__CLASSMETADATA__' => 4,
'App__Entity__Quiz__CLASSMETADATA__' => 5,
'App__Entity__User__CLASSMETADATA__' => 6,
'App__Entity__Carte_grise__CLASSMETADATA__' => 7,
'App__Entity__Compte__CLASSMETADATA__' => 8,
'App__Entity__Facture__CLASSMETADATA__' => 9,
'App__Entity__Paiement__CLASSMETADATA__' => 10,
'App__Entity__Rapport__CLASSMETADATA__' => 11,
'App__Entity__Reservation__CLASSMETADATA__' => 12,
'App__Entity__Resultat__CLASSMETADATA__' => 13,
'App__Entity__Service__CLASSMETADATA__' => 14,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Employe',
                ],
                'identifier' => [
                    [
                        'idEmploye',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'idEmploye' => $o[1],
                        'nom' => $o[2],
                        'prenom' => $o[3],
                        'email' => $o[4],
                        'age' => $o[5],
                        'dateEmbauche' => $o[6],
                        'poste' => $o[7],
                        'tel' => $o[8],
                        'salaire' => $o[9],
                        'statut' => $o[10],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_employe' => 'idEmploye',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'age' => 'age',
                        'date_embauche' => 'dateEmbauche',
                        'poste' => 'poste',
                        'tel' => 'tel',
                        'salaire' => 'salaire',
                        'statut' => 'statut',
                    ],
                ],
                'columnNames' => [
                    [
                        'idEmploye' => 'id_employe',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'age' => 'age',
                        'dateEmbauche' => 'date_embauche',
                        'poste' => 'poste',
                        'tel' => 'tel',
                        'salaire' => 'salaire',
                        'statut' => 'statut',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'employe',
                    ],
                ],
                'associationMappings' => [
                    [
                        'idService' => $o[11],
                        'equipements' => $o[13],
                    ],
                ],
                'idGenerator' => [
                    $o[14],
                ],
                'name' => [
                    'App\\Entity\\Employe',
                    12 => 'id_service',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'integer',
                    'date',
                    'string',
                    'string',
                    'float',
                    'string',
                ],
                'fieldName' => [
                    1 => 'idEmploye',
                    'nom',
                    'prenom',
                    'email',
                    'age',
                    'dateEmbauche',
                    'poste',
                    'tel',
                    'salaire',
                    'statut',
                ],
                'columnName' => [
                    1 => 'id_employe',
                    'nom',
                    'prenom',
                    'email',
                    'age',
                    'date_embauche',
                    'poste',
                    'tel',
                    'salaire',
                    'statut',
                ],
                'length' => [
                    2 => 50,
                    50,
                    100,
                    7 => 50,
                    20,
                    10 => 20,
                ],
                'fetch' => [
                    11 => 2,
                    13 => 2,
                ],
                'sourceEntity' => [
                    11 => 'App\\Entity\\Employe',
                    13 => 'App\\Entity\\Employe',
                ],
                'inversedBy' => [
                    11 => 'employes',
                ],
                'sourceToTargetKeyColumns' => [
                    11 => [
                        'id_service' => 'id_service',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    11 => [
                        'id_service' => 'id_service',
                    ],
                ],
                'joinColumns' => [
                    11 => [
                        $o[12],
                    ],
                ],
                'joinColumnFieldNames' => [
                    11 => [
                        'id_service' => 'id_service',
                    ],
                ],
                'unique' => [
                    12 => false,
                ],
                'onDelete' => [
                    12 => 'CASCADE',
                ],
                'nullable' => [
                    12 => true,
                ],
                'referencedColumnName' => [
                    12 => 'id_service',
                ],
                'mappedBy' => [
                    13 => 'employe',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    11 => 'idService',
                    13 => 'equipements',
                ],
                'targetEntity' => [
                    11 => 'App\\Entity\\Service',
                    13 => 'App\\Entity\\Equipement',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Permis',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PermisRepository',
                ],
                'identifier' => [
                    [
                        'id_permis',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id_permis' => $o[1],
                        'numero_permis' => $o[2],
                        'categorie' => $o[3],
                        'date_delivrance' => $o[4],
                        'date_expiration' => $o[5],
                        'etat' => $o[6],
                        'isRenewal' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_permis' => 'id_permis',
                        'numero_permis' => 'numero_permis',
                        'categorie' => 'categorie',
                        'date_delivrance' => 'date_delivrance',
                        'date_expiration' => 'date_expiration',
                        'etat' => 'etat',
                        'is_renewal' => 'isRenewal',
                    ],
                ],
                'columnNames' => [
                    [
                        'id_permis' => 'id_permis',
                        'numero_permis' => 'numero_permis',
                        'categorie' => 'categorie',
                        'date_delivrance' => 'date_delivrance',
                        'date_expiration' => 'date_expiration',
                        'etat' => 'etat',
                        'isRenewal' => 'is_renewal',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'permis',
                    ],
                ],
                'associationMappings' => [
                    [
                        'id_service' => $o[8],
                        'id_employe' => $o[10],
                        'reservations' => $o[12],
                        'idQuiz' => $o[13],
                    ],
                ],
                'idGenerator' => [
                    $o[15],
                ],
                'name' => [
                    'App\\Entity\\Permis',
                    9 => 'id_service',
                    11 => 'id_employe',
                    14 => 'idQuiz',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'date',
                    'date',
                    'string',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id_permis',
                    'numero_permis',
                    'categorie',
                    'date_delivrance',
                    'date_expiration',
                    'etat',
                    'isRenewal',
                ],
                'columnName' => [
                    1 => 'id_permis',
                    'numero_permis',
                    'categorie',
                    'date_delivrance',
                    'date_expiration',
                    'etat',
                    'is_renewal',
                ],
                'length' => [
                    2 => 50,
                    20,
                    6 => 20,
                ],
                'fetch' => [
                    8 => 2,
                    10 => 2,
                    12 => 2,
                    2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Permis',
                    10 => 'App\\Entity\\Permis',
                    12 => 'App\\Entity\\Permis',
                    'App\\Entity\\Permis',
                ],
                'inversedBy' => [
                    8 => 'permis',
                    10 => 'permis',
                    13 => 'permis',
                ],
                'sourceToTargetKeyColumns' => [
                    8 => [
                        'id_service' => 'id_service',
                    ],
                    10 => [
                        'id_employe' => 'id_employe',
                    ],
                    13 => [
                        'idQuiz' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    8 => [
                        'id_service' => 'id_service',
                    ],
                    10 => [
                        'id_employe' => 'id_employe',
                    ],
                    13 => [
                        'id' => 'idQuiz',
                    ],
                ],
                'joinColumns' => [
                    8 => [
                        $o[9],
                    ],
                    10 => [
                        $o[11],
                    ],
                    13 => [
                        $o[14],
                    ],
                ],
                'joinColumnFieldNames' => [
                    8 => [
                        'id_service' => 'id_service',
                    ],
                    10 => [
                        'id_employe' => 'id_employe',
                    ],
                    13 => [
                        'idQuiz' => 'idQuiz',
                    ],
                ],
                'unique' => [
                    9 => false,
                    11 => false,
                    14 => true,
                ],
                'onDelete' => [
                    9 => 'CASCADE',
                    11 => 'CASCADE',
                ],
                'nullable' => [
                    9 => true,
                    11 => true,
                    14 => true,
                ],
                'referencedColumnName' => [
                    9 => 'id_service',
                    11 => 'id_employe',
                    14 => 'id',
                ],
                'mappedBy' => [
                    12 => 'id_permis',
                ],
                'cascade' => [
                    13 => [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'id_service',
                    10 => 'id_employe',
                    12 => 'reservations',
                    'idQuiz',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\Service',
                    10 => 'App\\Entity\\Employe',
                    12 => 'App\\Entity\\Reservation',
                    'App\\Entity\\Quiz',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Equipement',
                ],
                'identifier' => [
                    [
                        'idEquipement',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'idEquipement' => $o[1],
                        'nom' => $o[2],
                        'description' => $o[3],
                        'categorie' => $o[4],
                        'etat' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_equipement' => 'idEquipement',
                        'nom' => 'nom',
                        'description' => 'description',
                        'categorie' => 'categorie',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'idEquipement' => 'id_equipement',
                        'nom' => 'nom',
                        'description' => 'description',
                        'categorie' => 'categorie',
                        'etat' => 'etat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'equipement',
                    ],
                ],
                'associationMappings' => [
                    [
                        'employe' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Equipement',
                    7 => 'id_employe',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'idEquipement',
                    'nom',
                    'description',
                    'categorie',
                    'etat',
                ],
                'columnName' => [
                    1 => 'id_equipement',
                    'nom',
                    'description',
                    'categorie',
                    'etat',
                ],
                'length' => [
                    2 => 100,
                    4 => 50,
                    20,
                ],
                'fetch' => [
                    6 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Equipement',
                ],
                'inversedBy' => [
                    6 => 'equipements',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'id_employe' => 'id_employe',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id_employe' => 'id_employe',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'id_employe' => 'id_employe',
                    ],
                ],
                'unique' => [
                    7 => false,
                ],
                'onDelete' => [
                    7 => 'CASCADE',
                ],
                'nullable' => [
                    7 => true,
                ],
                'referencedColumnName' => [
                    7 => 'id_employe',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'employe',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Employe',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Vehicule',
                ],
                'identifier' => [
                    [
                        'idVehicule',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'idVehicule' => $o[1],
                        'marque' => $o[2],
                        'modele' => $o[3],
                        'immatriculation' => $o[4],
                        'type' => $o[5],
                        'couleur' => $o[6],
                        'kilometrage' => $o[7],
                        'statut' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_vehicule' => 'idVehicule',
                        'marque' => 'marque',
                        'modele' => 'modele',
                        'immatriculation' => 'immatriculation',
                        'type' => 'type',
                        'couleur' => 'couleur',
                        'kilometrage' => 'kilometrage',
                        'statut' => 'statut',
                    ],
                ],
                'columnNames' => [
                    [
                        'idVehicule' => 'id_vehicule',
                        'marque' => 'marque',
                        'modele' => 'modele',
                        'immatriculation' => 'immatriculation',
                        'type' => 'type',
                        'couleur' => 'couleur',
                        'kilometrage' => 'kilometrage',
                        'statut' => 'statut',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'vehicule',
                    ],
                ],
                'associationMappings' => [
                    [
                        'carteGrise' => $o[9],
                        'reservations' => $o[11],
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\Vehicule',
                    10 => 'id_carte_grise',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'integer',
                    'string',
                ],
                'fieldName' => [
                    1 => 'idVehicule',
                    'marque',
                    'modele',
                    'immatriculation',
                    'type',
                    'couleur',
                    'kilometrage',
                    'statut',
                ],
                'columnName' => [
                    1 => 'id_vehicule',
                    'marque',
                    'modele',
                    'immatriculation',
                    'type',
                    'couleur',
                    'kilometrage',
                    'statut',
                ],
                'length' => [
                    2 => 50,
                    50,
                    20,
                    50,
                    30,
                    8 => 100,
                ],
                'fetch' => [
                    9 => 2,
                    11 => 2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\Vehicule',
                    11 => 'App\\Entity\\Vehicule',
                ],
                'inversedBy' => [
                    9 => 'vehicules',
                ],
                'sourceToTargetKeyColumns' => [
                    9 => [
                        'id_carte_grise' => 'id_carte_grise',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    9 => [
                        'id_carte_grise' => 'id_carte_grise',
                    ],
                ],
                'joinColumns' => [
                    9 => [
                        $o[10],
                    ],
                ],
                'joinColumnFieldNames' => [
                    9 => [
                        'id_carte_grise' => 'id_carte_grise',
                    ],
                ],
                'unique' => [
                    10 => false,
                ],
                'onDelete' => [
                    10 => 'CASCADE',
                ],
                'nullable' => [
                    10 => true,
                ],
                'referencedColumnName' => [
                    10 => 'id_carte_grise',
                ],
                'mappedBy' => [
                    11 => 'id_vehicule',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'carteGrise',
                    11 => 'reservations',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\CarteGrise',
                    11 => 'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CarteGrise',
                ],
                'identifier' => [
                    [
                        'idCarteGrise',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'idCarteGrise' => $o[1],
                        'numeroCarteGrise' => $o[2],
                        'proprietaire' => $o[3],
                        'adresseProprietaire' => $o[4],
                        'dateEmission' => $o[5],
                        'dateExpiration' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_carte_grise' => 'idCarteGrise',
                        'numero_carte_grise' => 'numeroCarteGrise',
                        'proprietaire' => 'proprietaire',
                        'adresse_proprietaire' => 'adresseProprietaire',
                        'date_emission' => 'dateEmission',
                        'date_expiration' => 'dateExpiration',
                    ],
                ],
                'columnNames' => [
                    [
                        'idCarteGrise' => 'id_carte_grise',
                        'numeroCarteGrise' => 'numero_carte_grise',
                        'proprietaire' => 'proprietaire',
                        'adresseProprietaire' => 'adresse_proprietaire',
                        'dateEmission' => 'date_emission',
                        'dateExpiration' => 'date_expiration',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'carte_grise',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[7],
                        'vehicules' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\CarteGrise',
                    8 => 'id_user',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'date',
                    'date',
                ],
                'fieldName' => [
                    1 => 'idCarteGrise',
                    'numeroCarteGrise',
                    'proprietaire',
                    'adresseProprietaire',
                    'dateEmission',
                    'dateExpiration',
                ],
                'columnName' => [
                    1 => 'id_carte_grise',
                    'numero_carte_grise',
                    'proprietaire',
                    'adresse_proprietaire',
                    'date_emission',
                    'date_expiration',
                ],
                'length' => [
                    2 => 50,
                    100,
                    255,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\CarteGrise',
                    9 => 'App\\Entity\\CarteGrise',
                ],
                'inversedBy' => [
                    7 => 'cartesGrises',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'id_user' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'id_user',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'id_user' => 'id_user',
                    ],
                ],
                'unique' => [
                    8 => false,
                ],
                'onDelete' => [
                    8 => 'CASCADE',
                ],
                'nullable' => [
                    8 => true,
                ],
                'referencedColumnName' => [
                    8 => 'id',
                ],
                'cascade' => [
                    9 => [
                        'persist',
                        'remove',
                    ],
                ],
                'mappedBy' => [
                    9 => 'carteGrise',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'user',
                    9 => 'vehicules',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\User',
                    9 => 'App\\Entity\\Vehicule',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Quiz',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\QuizRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'score' => $o[2],
                        'statut' => $o[3],
                        'dateTest' => $o[4],
                        'idUser' => $o[5],
                        'rating' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'score' => 'score',
                        'statut' => 'statut',
                        'date_test' => 'dateTest',
                        'id_user' => 'idUser',
                        'rating' => 'rating',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'score' => 'score',
                        'statut' => 'statut',
                        'dateTest' => 'date_test',
                        'idUser' => 'id_user',
                        'rating' => 'rating',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'quiz',
                    ],
                ],
                'associationMappings' => [
                    [
                        'permis' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Quiz',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'integer',
                    'string',
                    'date',
                    'integer',
                    'integer',
                ],
                'fieldName' => [
                    1 => 'id',
                    'score',
                    'statut',
                    'dateTest',
                    'idUser',
                    'rating',
                ],
                'columnName' => [
                    1 => 'id',
                    'score',
                    'statut',
                    'date_test',
                    'id_user',
                    'rating',
                ],
                'length' => [
                    3 => 255,
                ],
                'nullable' => [
                    6 => true,
                ],
                'fetch' => [
                    7 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Quiz',
                ],
                'mappedBy' => [
                    7 => 'idQuiz',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'permis',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\Permis',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'prenom' => $o[3],
                        'tel' => $o[4],
                        'localisation' => $o[5],
                        'email' => $o[6],
                        'mot_de_passe' => $o[7],
                        'status' => $o[8],
                        'role' => $o[9],
                        'image' => $o[10],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'tel' => 'tel',
                        'localisation' => 'localisation',
                        'email' => 'email',
                        'mot_de_passe' => 'mot_de_passe',
                        'status' => 'status',
                        'role' => 'role',
                        'image' => 'image',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'tel' => 'tel',
                        'localisation' => 'localisation',
                        'email' => 'email',
                        'mot_de_passe' => 'mot_de_passe',
                        'status' => 'status',
                        'role' => 'role',
                        'image' => 'image',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'comptes' => $o[11],
                        'reservations' => $o[12],
                    ],
                ],
                'idGenerator' => [
                    $o[13],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'tel',
                    'localisation',
                    'email',
                    'mot_de_passe',
                    'status',
                    'role',
                    'image',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'tel',
                    'localisation',
                    'email',
                    'mot_de_passe',
                    'status',
                    'role',
                    'image',
                ],
                'length' => [
                    2 => 50,
                    50,
                    20,
                    100,
                    150,
                    150,
                    50,
                    50,
                    255,
                ],
                'nullable' => [
                    10 => true,
                ],
                'fetch' => [
                    11 => 2,
                    2,
                ],
                'sourceEntity' => [
                    11 => 'App\\Entity\\User',
                    'App\\Entity\\User',
                ],
                'mappedBy' => [
                    11 => 'id_user',
                    'user_id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    11 => 'comptes',
                    'reservations',
                ],
                'targetEntity' => [
                    11 => 'App\\Entity\\Compte',
                    'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Carte_grise',
                ],
                'identifier' => [
                    [
                        'id_carte_grise',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id_carte_grise' => $o[1],
                        'numero_carte_grise' => $o[2],
                        'proprietaire' => $o[3],
                        'adresse_proprietaire' => $o[4],
                        'date_emission' => $o[5],
                        'date_expiration' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_carte_grise' => 'id_carte_grise',
                        'numero_carte_grise' => 'numero_carte_grise',
                        'proprietaire' => 'proprietaire',
                        'adresse_proprietaire' => 'adresse_proprietaire',
                        'date_emission' => 'date_emission',
                        'date_expiration' => 'date_expiration',
                    ],
                ],
                'columnNames' => [
                    [
                        'id_carte_grise' => 'id_carte_grise',
                        'numero_carte_grise' => 'numero_carte_grise',
                        'proprietaire' => 'proprietaire',
                        'adresse_proprietaire' => 'adresse_proprietaire',
                        'date_emission' => 'date_emission',
                        'date_expiration' => 'date_expiration',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'carte_grise',
                    ],
                ],
                'associationMappings' => [
                    [
                        'id_user' => $o[7],
                        'vehicules' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Carte_grise',
                    8 => 'id_user',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'date',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id_carte_grise',
                    'numero_carte_grise',
                    'proprietaire',
                    'adresse_proprietaire',
                    'date_emission',
                    'date_expiration',
                ],
                'columnName' => [
                    1 => 'id_carte_grise',
                    'numero_carte_grise',
                    'proprietaire',
                    'adresse_proprietaire',
                    'date_emission',
                    'date_expiration',
                ],
                'length' => [
                    2 => 50,
                    100,
                    255,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Carte_grise',
                    9 => 'App\\Entity\\Carte_grise',
                ],
                'inversedBy' => [
                    7 => 'carte_grises',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'id_user' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'id_user',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'id_user' => 'id_user',
                    ],
                ],
                'unique' => [
                    8 => false,
                ],
                'onDelete' => [
                    8 => 'CASCADE',
                ],
                'nullable' => [
                    8 => true,
                ],
                'referencedColumnName' => [
                    8 => 'id',
                ],
                'mappedBy' => [
                    9 => 'id_carte_grise',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'id_user',
                    9 => 'vehicules',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\User',
                    9 => 'App\\Entity\\Vehicule',
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Compte',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'mot_de_passe' => $o[2],
                        'image' => $o[3],
                        'email' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'mot_de_passe' => 'mot_de_passe',
                        'image' => 'image',
                        'email' => 'email',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'mot_de_passe' => 'mot_de_passe',
                        'image' => 'image',
                        'email' => 'email',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'compte',
                    ],
                ],
                'associationMappings' => [
                    [
                        'id_user' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Compte',
                    6 => 'id_user',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'mot_de_passe',
                    'image',
                    'email',
                ],
                'columnName' => [
                    1 => 'id',
                    'mot_de_passe',
                    'image',
                    'email',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Compte',
                ],
                'inversedBy' => [
                    5 => 'comptes',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'id_user' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'id_user',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'id_user' => 'id_user',
                    ],
                ],
                'unique' => [
                    6 => false,
                ],
                'onDelete' => [
                    6 => 'CASCADE',
                ],
                'nullable' => [
                    6 => true,
                ],
                'referencedColumnName' => [
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'id_user',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Facture',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'numeroFacture' => $o[2],
                        'dateFacturation' => $o[3],
                        'montant' => $o[4],
                        'description' => $o[5],
                        'statut' => $o[6],
                        'stripeChargeId' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'numero_facture' => 'numeroFacture',
                        'date_facturation' => 'dateFacturation',
                        'montant' => 'montant',
                        'description' => 'description',
                        'statut' => 'statut',
                        'stripe_charge_id' => 'stripeChargeId',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'numeroFacture' => 'numero_facture',
                        'dateFacturation' => 'date_facturation',
                        'montant' => 'montant',
                        'description' => 'description',
                        'statut' => 'statut',
                        'stripeChargeId' => 'stripe_charge_id',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'facture',
                    ],
                ],
                'associationMappings' => [
                    [
                        'paiement' => $o[8],
                        'reservation' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\Facture',
                    9 => 'paiement_id',
                    11 => 'reservation_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'datetime',
                    'float',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'numeroFacture',
                    'dateFacturation',
                    'montant',
                    'description',
                    'statut',
                    'stripeChargeId',
                ],
                'columnName' => [
                    1 => 'id',
                    'numero_facture',
                    'date_facturation',
                    'montant',
                    'description',
                    'statut',
                    'stripe_charge_id',
                ],
                'length' => [
                    2 => 50,
                    5 => 255,
                    20,
                    255,
                ],
                'unique' => [
                    2 => true,
                    9 => true,
                    11 => false,
                ],
                'nullable' => [
                    5 => true,
                    7 => true,
                    9 => true,
                    11 => false,
                ],
                'fetch' => [
                    8 => 2,
                    10 => 2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Facture',
                    10 => 'App\\Entity\\Facture',
                ],
                'sourceToTargetKeyColumns' => [
                    8 => [
                        'paiement_id' => 'id_paiement',
                    ],
                    10 => [
                        'reservation_id' => 'id_reservation',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    8 => [
                        'id_paiement' => 'paiement_id',
                    ],
                    10 => [
                        'id_reservation' => 'reservation_id',
                    ],
                ],
                'joinColumns' => [
                    8 => [
                        $o[9],
                    ],
                    10 => [
                        $o[11],
                    ],
                ],
                'joinColumnFieldNames' => [
                    8 => [
                        'paiement_id' => 'paiement_id',
                    ],
                    10 => [
                        'reservation_id' => 'reservation_id',
                    ],
                ],
                'referencedColumnName' => [
                    9 => 'id_paiement',
                    11 => 'id_reservation',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'paiement',
                    10 => 'reservation',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\Paiement',
                    10 => 'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Paiement',
                ],
                'identifier' => [
                    [
                        'id_paiement',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id_paiement' => $o[1],
                        'numeroCarte' => $o[2],
                        'datePaiement' => $o[3],
                        'prix' => $o[4],
                        'statut' => $o[5],
                        'telephone' => $o[6],
                        'dateExpiration' => $o[7],
                        'cvc' => $o[8],
                        'nomTitulaireCarte' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_paiement' => 'id_paiement',
                        'numeroCarte' => 'numeroCarte',
                        'date_paiement' => 'datePaiement',
                        'prix' => 'prix',
                        'statut' => 'statut',
                        'telephone' => 'telephone',
                        'date_expiration' => 'dateExpiration',
                        'cvc' => 'cvc',
                        'nom_titulaire_carte' => 'nomTitulaireCarte',
                    ],
                ],
                'columnNames' => [
                    [
                        'id_paiement' => 'id_paiement',
                        'numeroCarte' => 'numeroCarte',
                        'datePaiement' => 'date_paiement',
                        'prix' => 'prix',
                        'statut' => 'statut',
                        'telephone' => 'telephone',
                        'dateExpiration' => 'date_expiration',
                        'cvc' => 'cvc',
                        'nomTitulaireCarte' => 'nom_titulaire_carte',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'paiement',
                    ],
                ],
                'associationMappings' => [
                    [
                        'reservation' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\Paiement',
                    11 => 'id_reservation',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'datetime',
                    'decimal',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id_paiement',
                    'numeroCarte',
                    'datePaiement',
                    'prix',
                    'statut',
                    'telephone',
                    'dateExpiration',
                    'cvc',
                    'nomTitulaireCarte',
                ],
                'columnName' => [
                    1 => 'id_paiement',
                    'numeroCarte',
                    'date_paiement',
                    'prix',
                    'statut',
                    'telephone',
                    'date_expiration',
                    'cvc',
                    'nom_titulaire_carte',
                ],
                'length' => [
                    2 => 255,
                    5 => 20,
                    20,
                    10,
                    5,
                    100,
                ],
                'precision' => [
                    4 => 10,
                ],
                'scale' => [
                    4 => 0,
                ],
                'fetch' => [
                    10 => 2,
                ],
                'sourceEntity' => [
                    10 => 'App\\Entity\\Paiement',
                ],
                'sourceToTargetKeyColumns' => [
                    10 => [
                        'id_reservation' => 'id_reservation',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    10 => [
                        'id_reservation' => 'id_reservation',
                    ],
                ],
                'joinColumns' => [
                    10 => [
                        $o[11],
                    ],
                ],
                'joinColumnFieldNames' => [
                    10 => [
                        'id_reservation' => 'id_reservation',
                    ],
                ],
                'unique' => [
                    11 => false,
                ],
                'onDelete' => [
                    11 => 'CASCADE',
                ],
                'nullable' => [
                    11 => true,
                ],
                'referencedColumnName' => [
                    11 => 'id_reservation',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    10 => 'reservation',
                ],
                'targetEntity' => [
                    10 => 'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Rapport',
                ],
                'identifier' => [
                    [
                        'id_rapport',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id_rapport' => $o[1],
                        'direction' => $o[2],
                        'visibilite' => $o[3],
                        'huileDefault' => $o[4],
                        'pneaumatique' => $o[5],
                        'echappement' => $o[6],
                        'carrosorie' => $o[7],
                        'eclairage' => $o[8],
                        'freinage' => $o[9],
                        'date' => $o[10],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_rapport' => 'id_rapport',
                        'direction' => 'direction',
                        'visibilite' => 'visibilite',
                        'huileDefault' => 'huileDefault',
                        'pneaumatique' => 'pneaumatique',
                        'echappement' => 'echappement',
                        'carrosorie' => 'carrosorie',
                        'eclairage' => 'eclairage',
                        'freinage' => 'freinage',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id_rapport' => 'id_rapport',
                        'direction' => 'direction',
                        'visibilite' => 'visibilite',
                        'huileDefault' => 'huileDefault',
                        'pneaumatique' => 'pneaumatique',
                        'echappement' => 'echappement',
                        'carrosorie' => 'carrosorie',
                        'eclairage' => 'eclairage',
                        'freinage' => 'freinage',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'rapport',
                    ],
                ],
                'associationMappings' => [
                    [
                        'id_resultat' => $o[11],
                    ],
                ],
                'idGenerator' => [
                    $o[13],
                ],
                'name' => [
                    'App\\Entity\\Rapport',
                    12 => 'id_resultat',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id_rapport',
                    'direction',
                    'visibilite',
                    'huileDefault',
                    'pneaumatique',
                    'echappement',
                    'carrosorie',
                    'eclairage',
                    'freinage',
                    'date',
                ],
                'columnName' => [
                    1 => 'id_rapport',
                    'direction',
                    'visibilite',
                    'huileDefault',
                    'pneaumatique',
                    'echappement',
                    'carrosorie',
                    'eclairage',
                    'freinage',
                    'date',
                ],
                'length' => [
                    2 => 150,
                    150,
                    150,
                    150,
                    150,
                    150,
                    150,
                    150,
                ],
                'fetch' => [
                    11 => 2,
                ],
                'sourceEntity' => [
                    11 => 'App\\Entity\\Rapport',
                ],
                'inversedBy' => [
                    11 => 'rapports',
                ],
                'sourceToTargetKeyColumns' => [
                    11 => [
                        'id_resultat' => 'id_resultat',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    11 => [
                        'id_resultat' => 'id_resultat',
                    ],
                ],
                'joinColumns' => [
                    11 => [
                        $o[12],
                    ],
                ],
                'joinColumnFieldNames' => [
                    11 => [
                        'id_resultat' => 'id_resultat',
                    ],
                ],
                'unique' => [
                    12 => false,
                ],
                'onDelete' => [
                    12 => 'CASCADE',
                ],
                'nullable' => [
                    12 => true,
                ],
                'referencedColumnName' => [
                    12 => 'id_resultat',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    11 => 'id_resultat',
                ],
                'targetEntity' => [
                    11 => 'App\\Entity\\Resultat',
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Reservation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReservationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'dateReservation' => $o[2],
                        'heureReservation' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_reservation' => 'id',
                        'date_reservation' => 'dateReservation',
                        'heureReservation' => 'heureReservation',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id_reservation',
                        'dateReservation' => 'date_reservation',
                        'heureReservation' => 'heureReservation',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reservation',
                    ],
                ],
                'associationMappings' => [
                    [
                        'paiements' => $o[4],
                        'factures' => $o[5],
                        'userId' => $o[6],
                        'serviceId' => $o[8],
                        'vehiculeId' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\Reservation',
                    7 => 'user_id',
                    9 => 'service_id',
                    11 => 'idVehicule',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'date',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'dateReservation',
                    'heureReservation',
                ],
                'columnName' => [
                    1 => 'id_reservation',
                    'date_reservation',
                    'heureReservation',
                ],
                'length' => [
                    3 => 255,
                ],
                'cascade' => [
                    4 => [
                        'remove',
                    ],
                    [
                        'remove',
                    ],
                ],
                'fetch' => [
                    4 => 2,
                    2,
                    2,
                    8 => 2,
                    10 => 2,
                ],
                'orphanRemoval' => [
                    4 => true,
                    true,
                ],
                'sourceEntity' => [
                    4 => 'App\\Entity\\Reservation',
                    'App\\Entity\\Reservation',
                    'App\\Entity\\Reservation',
                    8 => 'App\\Entity\\Reservation',
                    10 => 'App\\Entity\\Reservation',
                ],
                'mappedBy' => [
                    4 => 'reservation',
                    'reservation',
                ],
                'inversedBy' => [
                    6 => 'reservations',
                    8 => 'reservations',
                    10 => 'reservations',
                ],
                'sourceToTargetKeyColumns' => [
                    6 => [
                        'user_id' => 'id',
                    ],
                    8 => [
                        'service_id' => 'id_service',
                    ],
                    10 => [
                        'idVehicule' => 'id_vehicule',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    6 => [
                        'id' => 'user_id',
                    ],
                    8 => [
                        'id_service' => 'service_id',
                    ],
                    10 => [
                        'id_vehicule' => 'idVehicule',
                    ],
                ],
                'joinColumns' => [
                    6 => [
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                    ],
                    10 => [
                        $o[11],
                    ],
                ],
                'joinColumnFieldNames' => [
                    6 => [
                        'user_id' => 'user_id',
                    ],
                    8 => [
                        'service_id' => 'service_id',
                    ],
                    10 => [
                        'idVehicule' => 'idVehicule',
                    ],
                ],
                'unique' => [
                    7 => false,
                    9 => false,
                    11 => false,
                ],
                'nullable' => [
                    7 => false,
                    9 => false,
                    11 => false,
                ],
                'referencedColumnName' => [
                    7 => 'id',
                    9 => 'id_service',
                    11 => 'id_vehicule',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    4 => 'paiements',
                    'factures',
                    'userId',
                    8 => 'serviceId',
                    10 => 'vehiculeId',
                ],
                'targetEntity' => [
                    4 => 'App\\Entity\\Paiement',
                    'App\\Entity\\Facture',
                    'App\\Entity\\User',
                    8 => 'App\\Entity\\Service',
                    10 => 'App\\Entity\\Vehicule',
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Resultat',
                ],
                'identifier' => [
                    [
                        'id_resultat',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id_resultat' => $o[1],
                        'direction' => $o[2],
                        'visibilite' => $o[3],
                        'huileDefault' => $o[4],
                        'pneaumatique' => $o[5],
                        'echappement' => $o[6],
                        'carrosorie' => $o[7],
                        'eclairage' => $o[8],
                        'freinage' => $o[9],
                        'vinSaisie' => $o[10],
                        'status' => $o[11],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_resultat' => 'id_resultat',
                        'direction' => 'direction',
                        'visibilite' => 'visibilite',
                        'huileDefault' => 'huileDefault',
                        'pneaumatique' => 'pneaumatique',
                        'echappement' => 'echappement',
                        'carrosorie' => 'carrosorie',
                        'eclairage' => 'eclairage',
                        'freinage' => 'freinage',
                        'vinSaisie' => 'vinSaisie',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id_resultat' => 'id_resultat',
                        'direction' => 'direction',
                        'visibilite' => 'visibilite',
                        'huileDefault' => 'huileDefault',
                        'pneaumatique' => 'pneaumatique',
                        'echappement' => 'echappement',
                        'carrosorie' => 'carrosorie',
                        'eclairage' => 'eclairage',
                        'freinage' => 'freinage',
                        'vinSaisie' => 'vinSaisie',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'resultat',
                    ],
                ],
                'associationMappings' => [
                    [
                        'id_service' => $o[12],
                        'id_paiement' => $o[14],
                        'rapports' => $o[16],
                    ],
                ],
                'idGenerator' => [
                    $o[17],
                ],
                'name' => [
                    'App\\Entity\\Resultat',
                    13 => 'id_service',
                    15 => 'id_paiement',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'boolean',
                    'boolean',
                    'boolean',
                    'boolean',
                    'boolean',
                    'boolean',
                    'boolean',
                    'boolean',
                    'string',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id_resultat',
                    'direction',
                    'visibilite',
                    'huileDefault',
                    'pneaumatique',
                    'echappement',
                    'carrosorie',
                    'eclairage',
                    'freinage',
                    'vinSaisie',
                    'status',
                ],
                'columnName' => [
                    1 => 'id_resultat',
                    'direction',
                    'visibilite',
                    'huileDefault',
                    'pneaumatique',
                    'echappement',
                    'carrosorie',
                    'eclairage',
                    'freinage',
                    'vinSaisie',
                    'status',
                ],
                'length' => [
                    10 => 255,
                ],
                'fetch' => [
                    12 => 2,
                    14 => 2,
                    16 => 2,
                ],
                'sourceEntity' => [
                    12 => 'App\\Entity\\Resultat',
                    14 => 'App\\Entity\\Resultat',
                    16 => 'App\\Entity\\Resultat',
                ],
                'inversedBy' => [
                    12 => 'resultats',
                    14 => 'resultats',
                ],
                'sourceToTargetKeyColumns' => [
                    12 => [
                        'id_service' => 'id_service',
                    ],
                    14 => [
                        'id_paiement' => 'id_paiement',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    12 => [
                        'id_service' => 'id_service',
                    ],
                    14 => [
                        'id_paiement' => 'id_paiement',
                    ],
                ],
                'joinColumns' => [
                    12 => [
                        $o[13],
                    ],
                    14 => [
                        $o[15],
                    ],
                ],
                'joinColumnFieldNames' => [
                    12 => [
                        'id_service' => 'id_service',
                    ],
                    14 => [
                        'id_paiement' => 'id_paiement',
                    ],
                ],
                'unique' => [
                    13 => false,
                    15 => false,
                ],
                'onDelete' => [
                    13 => 'CASCADE',
                    15 => 'CASCADE',
                ],
                'nullable' => [
                    13 => true,
                    15 => true,
                ],
                'referencedColumnName' => [
                    13 => 'id_service',
                    15 => 'id_paiement',
                ],
                'mappedBy' => [
                    16 => 'id_resultat',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    12 => 'id_service',
                    14 => 'id_paiement',
                    16 => 'rapports',
                ],
                'targetEntity' => [
                    12 => 'App\\Entity\\Service',
                    14 => 'App\\Entity\\Paiement',
                    16 => 'App\\Entity\\Rapport',
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Service',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ServiceRepository',
                ],
                'identifier' => [
                    [
                        'idService',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'idService' => $o[1],
                        'nom' => $o[2],
                        'type' => $o[3],
                        'heureOuverture' => $o[4],
                        'heureFermeture' => $o[5],
                        'prix' => $o[6],
                        'gouvernerat' => $o[7],
                        'numero' => $o[8],
                        'description' => $o[9],
                        'email' => $o[10],
                        'latitude' => $o[11],
                        'longitude' => $o[12],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id_service' => 'idService',
                        'nom' => 'nom',
                        'type' => 'type',
                        'heure_ouverture' => 'heureOuverture',
                        'heure_fermeture' => 'heureFermeture',
                        'prix' => 'prix',
                        'gouvernerat' => 'gouvernerat',
                        'numero' => 'numero',
                        'description' => 'description',
                        'email' => 'email',
                        'latitude' => 'latitude',
                        'longitude' => 'longitude',
                    ],
                ],
                'columnNames' => [
                    [
                        'idService' => 'id_service',
                        'nom' => 'nom',
                        'type' => 'type',
                        'heureOuverture' => 'heure_ouverture',
                        'heureFermeture' => 'heure_fermeture',
                        'prix' => 'prix',
                        'gouvernerat' => 'gouvernerat',
                        'numero' => 'numero',
                        'description' => 'description',
                        'email' => 'email',
                        'latitude' => 'latitude',
                        'longitude' => 'longitude',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'service',
                    ],
                ],
                'associationMappings' => [
                    [
                        'employes' => $o[13],
                        'resultats' => $o[14],
                        'reservations' => $o[15],
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\Service',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'float',
                    'string',
                    'integer',
                    'string',
                    'string',
                    'float',
                    'float',
                ],
                'fieldName' => [
                    1 => 'idService',
                    'nom',
                    'type',
                    'heureOuverture',
                    'heureFermeture',
                    'prix',
                    'gouvernerat',
                    'numero',
                    'description',
                    'email',
                    'latitude',
                    'longitude',
                ],
                'columnName' => [
                    1 => 'id_service',
                    'nom',
                    'type',
                    'heure_ouverture',
                    'heure_fermeture',
                    'prix',
                    'gouvernerat',
                    'numero',
                    'description',
                    'email',
                    'latitude',
                    'longitude',
                ],
                'length' => [
                    2 => 100,
                    50,
                    255,
                    255,
                    7 => 20,
                    9 => 255,
                    255,
                ],
                'fetch' => [
                    13 => 2,
                    2,
                    2,
                ],
                'sourceEntity' => [
                    13 => 'App\\Entity\\Service',
                    'App\\Entity\\Service',
                    'App\\Entity\\Service',
                ],
                'mappedBy' => [
                    13 => 'id_service',
                    'id_service',
                    'serviceId',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    13 => 'employes',
                    'resultats',
                    'reservations',
                ],
                'targetEntity' => [
                    13 => 'App\\Entity\\Employe',
                    'App\\Entity\\Resultat',
                    'App\\Entity\\Reservation',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];

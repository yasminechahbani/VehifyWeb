{% extends 'baseFhomePage.html.twig' %}
{% set active_page = 'Edit' %}

{% block title %}Modifier le profil
{% endblock %}

{% block content %}
	<div class="container py-5">
		<div class="row justify-content-center">
			<div class="col-lg-8">
				<div class="card border-0 shadow-lg rounded-3">
					<div class="card-header bg-primary p-4 border-0">
						<div class="d-flex align-items-center justify-content-between">
							<div class="text-white">
								<h3 class="h4 mb-1">Modifier le profil</h3>
								<p class="mb-0 small">Mettez à jour vos informations personnelles</p>
							</div>
							<a href="{{ path('app_home') }}" class="btn btn-light btn-sm">
								<i class="fas fa-arrow-left me-2"></i>Retour
							</a>
						</div>
					</div>

					<div class="card-body p-4">
						{{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}

						<div class="row g-4">
							<div class="col-md-6">
								<div class="form-floating">
									{{ form_widget(form.nom, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Nom'
                                    }
                                }) }}
									<label>
										<i class="fas fa-user me-2"></i>Nom</label>
								</div>
							</div>

							<div class="col-md-6">
								<div class="form-floating">
									{{ form_widget(form.prenom, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Prénom'
                                    }
                                }) }}
									<label>
										<i class="fas fa-user me-2"></i>Prénom</label>
								</div>
							</div>

							<div class="col-12">
								<div class="form-floating">
									{{ form_widget(form.email, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Email'
                                    }
                                }) }}
									<label>
										<i class="fas fa-envelope me-2"></i>Email</label>
								</div>
							</div>

							<div class="col-12">
								<div class="form-floating">
									{{ form_widget(form.mot_de_passe, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Mot de passe'
                                    }
                                }) }}
									<label>
										<i class="fas fa-lock me-2"></i>Mot de passe</label>
									<small class="text-muted mt-1 d-block">Laissez vide pour garder le mot de passe actuel</small>
								</div>
							</div>

							<div class="col-md-6">
								<div class="form-floating">
									{{ form_widget(form.tel, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Téléphone'
                                    }
                                }) }}
									<label>
										<i class="fas fa-phone me-2"></i>Téléphone</label>
								</div>
							</div>

							<div class="col-md-6">
								<div class="form-floating">
									{{ form_widget(form.localisation, {
                                    'attr': {
                                        'class': 'form-control',
                                        'placeholder': 'Localisation'
                                    }
                                }) }}
									<label>
										<i class="fas fa-map-marker-alt me-2"></i>Localisation</label>
								</div>
							</div>

							<div class="col-12">
								<div class="form-group">
									<label class="form-label">
										<i class="fas fa-image me-2"></i>Photo de profil</label>
									{{ form_widget(form.image, {
                                    'attr': {
                                        'class': 'form-control',
                                        'accept': 'image/*'
                                    }
                                }) }}
									<small class="text-muted mt-1 d-block">Formats acceptés : JPG, PNG, GIF (max. 5MB)</small>
								</div>
							</div>
						</div>

						<div class="d-grid justify-content-center gap-2 mt-4">
							<div>
								<button type="submit" class="btn btn-primary btn-lg">
									<i class="fas fa-save me-2"></i>Enregistrer les modifications
								</button>
							</div>
						</div>

						{{ form_end(form) }}
					</div>
				</div>
			</div>
		</div>
	</div>

	<style>
		.form-floating {
			position: relative;
		}

		.form-floating > label {
			position: absolute;
			top: 0;
			left: 0;
			padding: 1rem;
			opacity: 0.65;
		}

		.form-floating > .form-control {
			padding: 1rem;
			height: calc(3.5rem + 2px);
		}

		.form-floating > .form-control:focus ~ label,
		.form-floating > .form-control:not(:placeholder-shown) ~ label {
			transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
			background-color: white;
			padding: 0 0.5rem;
			height: auto;
		}

		.btn-primary {
			padding: 12px 24px;
			font-size: 16px;
			background-color: #0d6efd;
			border-color: #0d6efd;
		}

		.btn-primary:hover {
			background-color: #0b5ed7;
			border-color: #0a58ca;
		}

		.card {
			transition: all 0.3s ease;
		}

		.form-control:focus {
			border-color: #0d6efd;
			box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
		}
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const requiredFields = form.querySelectorAll('input[type="text"], input[type="email"], input[type="tel"]');
            
            requiredFields.forEach(field => {
                field.setAttribute('required', 'required');
                
                field.addEventListener('input', function() {
                    validateField(this);
                });
                
                field.addEventListener('blur', function() {
                    validateField(this);
                });
            });
            
            function validateField(field) {
                if (!field.value.trim()) {
                    field.classList.add('is-invalid');
                    field.classList.remove('is-valid');
                    
                    let feedback = field.nextElementSibling;
                    if (!feedback || !feedback.classList.contains('invalid-feedback')) {
                        feedback = document.createElement('div');
                        feedback.className = 'invalid-feedback';
                        field.parentNode.appendChild(feedback);
                    }
                    feedback.textContent = 'Ce champ est obligatoire';
                } else {
                    field.classList.remove('is-invalid');
                    field.classList.add('is-valid');
                }
            }
            
            form.addEventListener('submit', function(e) {
                let isValid = true;
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        validateField(field);
                    }
                });
                
                if (!isValid) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'error',
                        title: 'Erreur de validation',
                        text: 'Veuillez remplir tous les champs obligatoires',
                        confirmButtonColor: '#0d6efd'
                    });
                }
            });
        });
    </script>

    <style>
        .is-invalid {
            border-color: #dc3545 !important;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e") !important;
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        .is-valid {
            border-color: #198754 !important;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") !important;
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        .invalid-feedback {
            display: none;
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }

        .is-invalid ~ .invalid-feedback {
            display: block;
        }
    </style>
{% endblock %}

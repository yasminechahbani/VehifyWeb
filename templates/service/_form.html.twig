{% set active_page = 'home' %}
<div class="card">
    <div class="card-header bg-primary text-white">
        <h3>{{ form.vars.data.id_service ? 'Edit Service' : 'New Service' }}</h3>
    </div>
    <div class="card-body">
        {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'needs-validation'}}) }}
        <div class="row g-3">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    {{ form_label(form.nom, "Service Name", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.nom, {'attr': {'class': 'form-control' ~ (form_errors(form.nom) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.nom) %}
                    <div class="validation-error">{{ form_errors(form.nom) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.type, "Service Type", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.type, {'attr': {'class': 'form-control' ~ (form_errors(form.type) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.type) %}
                    <div class="validation-error">{{ form_errors(form.type) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.prix, "Price (TND)", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.prix, {'attr': {'class': 'form-control' ~ (form_errors(form.prix) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.prix) %}
                    <div class="validation-error">{{ form_errors(form.prix) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.gouvernerat, "Region", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.gouvernerat, {
                        'attr': {
                            'class': 'form-control' ~ (form_errors(form.gouvernerat) ? ' is-invalid' : ''),
                            'onchange': 'updateCoordinates(this.value)',
                            'placeholder': 'Rue de...'
                        }
                    }) }}
                    {% if form_errors(form.gouvernerat) %}
                    <div class="validation-error">{{ form_errors(form.gouvernerat) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.numero, "Phone Number", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.numero, {'attr': {'class': 'form-control' ~ (form_errors(form.numero) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.numero) %}
                    <div class="validation-error">{{ form_errors(form.numero) }}</div>
                    {% endif %}
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    {{ form_label(form.heureOuverture, "Heure d'ouverture", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.heureOuverture, {'attr': {'class': 'form-control' ~ (form_errors(form.heureOuverture) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.heureOuverture) %}
                    <div class="validation-error">{{ form_errors(form.heureOuverture) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.heureFermeture, "Heure de fermeture", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.heureFermeture, {'attr': {'class': 'form-control' ~ (form_errors(form.heureFermeture) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.heureFermeture) %}
                    <div class="validation-error">{{ form_errors(form.heureFermeture) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.email, "Email", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.email, {'attr': {'class': 'form-control' ~ (form_errors(form.email) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.email) %}
                    <div class="validation-error">{{ form_errors(form.email) }}</div>
                    {% endif %}
                </div>

                <div class="form-group mb-3">
                    {{ form_label(form.description, "Description", {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.description, {'attr': {'class': 'form-control' ~ (form_errors(form.description) ? ' is-invalid' : '')}}) }}
                    {% if form_errors(form.description) %}
                    <div class="validation-error">{{ form_errors(form.description) }}</div>
                    {% endif %}
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            {{ form_label(form.latitude, "Latitude", {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.latitude, {'attr': {'class': 'form-control', 'readonly': 'readonly'}}) }}
                            {% if form_errors(form.latitude) %}
                            <div class="validation-error">{{ form_errors(form.latitude) }}</div>
                            {% endif %}
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            {{ form_label(form.longitude, "Longitude", {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.longitude, {'attr': {'class': 'form-control', 'readonly': 'readonly'}}) }}
                            {% if form_errors(form.longitude) %}
                            <div class="validation-error">{{ form_errors(form.longitude) }}</div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
            <a href="{{ path('app_serve_index') }}" class="btn btn-secondary me-2">Back to list</a>
            <button type="submit" class="btn btn-primary">{{ button_label|default('Save') }}</button>
        </div>
        {{ form_end(form) }}
    </div>
</div>

<script>
function updateCoordinates(region) {
    if (!region) return;
    
    const searchQuery = `${region}, Tunisia`;
    const apiUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            if (data && data.length > 0) {
                const latitude = parseFloat(data[0].lat);
                const longitude = parseFloat(data[0].lon);
                
                document.getElementById('{{ form.latitude.vars.id }}').value = latitude;
                document.getElementById('{{ form.longitude.vars.id }}').value = longitude;
            }
        })
        .catch(error => console.error('Error fetching coordinates:', error));
}
</script>

<style>
.card {
    border: none !important;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
}

.card-header {
    background-color: white !important;
    border: none !important;
    padding: 1rem 1.5rem !important;
}

.card-header h3 {
    font-size: 1.25rem;
    margin-bottom: 0.25rem;
    color: #333;
}

.bg-primary {
    background-color: white !important;
}

.text-white {
    color: #333 !important;
}

.card-body {
    padding: 1.5rem;
}

.form-group {
    background-color: #f8f9fa !important;
    padding: 1rem !important;
    border-radius: 0.375rem !important;
    margin-bottom: 1rem !important;
}

.form-control {
    border: 1px solid #dee2e6;
    padding: 0.5rem 0.75rem;
    border-radius: 0.25rem;
    height: calc(1.5em + 1rem + 2px);
    transition: all 0.2s ease-in-out;
}

.form-control:focus {
    border-color: #ffc107;
    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
}

.form-label {
    font-weight: 500;
    color: #495057;
    margin-bottom: 0.5rem;
}

.btn {
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    font-weight: 500;
    transition: all 0.2s ease-in-out;
}

.btn-primary {
    background-color: #ffc107 !important;
    border-color: #ffc107 !important;
    color: #000 !important;
}

.btn-secondary {
    background-color: #f8f9fa !important;
    border-color: #f8f9fa !important;
    color: #333 !important;
}

.btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}

.validation-error, .text-danger {
    color: #dc3545 !important;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

.form-control.is-invalid {
    border-color: #dc3545;
    padding-right: calc(1.5em + 0.75rem);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}

.row {
    --bs-gutter-x: 1.5rem;
    --bs-gutter-y: 1.5rem;
}

.mt-4 {
    margin-top: 2rem !important;
}

.d-grid {
    display: grid !important;
}

.gap-2 {
    gap: 0.5rem !important;
}

.me-2 {
    margin-right: 0.5rem !important;
}

.justify-content-md-end {
    justify-content: flex-end !important;
}

.border-top {
    border-top: 1px solid #dee2e6 !important;
    padding-top: 1rem !important;
}
</style>
